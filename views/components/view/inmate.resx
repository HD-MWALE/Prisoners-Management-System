<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="VisitingPrivilege.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAAA3JJREFUaEPt
        mFtrE0EUx0dFQX0VFBR88FOIoIg+K8XqR/BCraG1djf1Ql588lIQVCqCL1JFxAexb1JsG0sLsTbJblGs
        aC+JSpvUVtMmij2eMzNNN+6YpjubYmX/8IMlmZnzn53bmWWBAgUKFCjQ/6+jj9axcGIfM6xrzLReImkk
        i4BPUFvUZpSZyavMGNrLY2qroXcjM+0wNjwpA/lHcxzYuQFgTa8E9Ey/LZaZQAzuwZPCdi02MOZoUJ/m
        QWCN/cBCUWD1XcBOdwKrk9Az/Ub/URkqK+qN4KjUSFcV6HhsPVZqKwb1A3qzDX3c4DazC07eT0BHPA3x
        kQykMt849PxsMA0n8L+txgvRGaqzOCpt3FtZRWAtTpknJcF1oekR6oFdl6LQ3jcKc/k8FAqFslAZKkt1
        qC5vQ7T3mHv8q0zrejGwH5yN8TdZczsG2ZlZpdlyZGZycOimaIO3RW0a9hXp9g+Z1hFkvhhcF3prGDj0
        0IJ8Xm2wEmg06h8kRSfESMxjJw5L11JN8c34R6rEgA40b3Hoj90Z0DK/ALVR2yamolgT9jiLxDZJ9ygz
        eV5pxCu4+LaHu2ByOqc05IWJrzm+AfCFTTEM2xTm6cAwrS8lBnSg7Q+H+170o9KIDne7P4ipJLbYT2JB
        t1j7XSZ0wD1854Weinab5TI7l4cdLd3inKBYdGLL9MBtxBO42PAgOoOLTmXAD+raEzwGj8V3pLDVrzbj
        AVpgOMR0IKmC+8HT1yk5jfhi7qXtk3IOtxkvUD6DKcHQ+JQyuB8kR7Mi7aBYpvWZOvCjxIQOtE9jXkMH
        kCq4H9DOxnMncSbkqQOFEhM6yA54OXUrRdUB/7ZQOYXssawyuB8kRjPOKZSmDtAFxW3GCyu+iK2eqmyj
        pzAlVgX3A0q3xTaK8eQ2usdtRIOVPMjCid1VSyVudb5XmtDhxvNhOX2cqQQpbDe6jOiwIslcMiTMkyL2
        BpxKwy4jXqEFhqnvwdZ+PuwqQ8shh20caEXjxXTaeue+Xq7qC82CzGTEZUSHalwpTeuidKtQFS/1W5pf
        wOWOtzD9femOUBkqS3X4tBFvnljiUs8Fa7CggfySlfSheUuLD9+k87PKm9QUzOTmOPRc5rMKeTG4t4q1
        aj9sObWqPy06pf64+xNxBtSB2qrCx91AgQIFChTonxZjvwE5pzA4oHGaLQAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="txtSearch.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAARUAAAAdCAYAAACEyvg7AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAA/SURBVHhe7cNBDQAwCASw+TfFOQM8LPzapA8AAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAOBSktqt+j89EdmDGYbpZbAAAAAASUVORK5CYII=
</value>
  </data>
</root>